name: Build uug-demo-api container
env:
  IMAGE_NAME: uug-demo-api
  REGISTRY: ghcr.io/ripleymj
on:
  push:
    paths-ignore:
      - 'k8s/**'

jobs:
  check:
    name: Run repo lint and sanity checks
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          pip3 install yamllint
      - name: Run actions yamllint
        run: |
          yamllint k8s/service.yaml k8s/ingress.yaml deployment.yaml.j2
      - name: Fetch and untar kubeval
        run: |
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar zxf kubeval-linux-amd64.tar.gz
      - name: Run kubeval
        run: |
          ./kubeval deployment.yaml.j2
          ./kubeval k8s/service.yaml
  build:
    name: Build image
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: latest ${{ github.sha }}
          containerfiles: |
            ./Containerfile

      - name: Log in to the GitHub Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Container Repository
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}

      - name: Print image URL
        run: echo "Image pushed to ${{ steps.push-to-ghcr.outputs.registry-paths }}"
  test:
    name: Test Image
    needs: build
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      uug-demo-api:
        # Docker Hub image
        image: ghcr.io/ripleymj/uug-demo-api:latest
        ports:
          - 3000:3000
    steps:
      - run: |
          sleep 5
          curl http://localhost:3000
          curl http://localhost:3000/earthquakes/latest
        name: Test fetching from container
  publish:
    name: Publish Updated Image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2
      - name: Setup nginx
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: deployment.yaml.j2
          output_file: k8s/deployment.yaml
          strict: true
          variables: |
            version=${{ github.sha }}
      - run: |
          cat k8s/deployment.yaml
      - run: |
          git config --global user.email "bot@github.com"
          git config --global user.name "GitHub Bot"
          git add k8s/deployment.yaml
          git commit -m "Publish new image"
          git push 
